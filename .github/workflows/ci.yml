name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: ["21"]

    services:
      redis:
        image: redis:7.0-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: "temurin"
          cache: gradle

      - name: 🔧 Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🏗️ Build with Gradle
        run: ./gradlew build --no-daemon

      - name: 🧪 Run tests
        run: ./gradlew test --no-daemon

      - name: 📊 Generate test coverage report
        run: ./gradlew jacocoTestReport --no-daemon

      - name: 📈 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./build/reports/jacoco/test/jacocoTestReport.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: 📋 Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            **/build/test-results/**/*.xml

      - name: 🐛 Run SpotBugs
        run: ./gradlew spotbugsMain --no-daemon
        continue-on-error: true

      - name: 📦 Build artifacts
        run: ./gradlew assemble --no-daemon

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rate-limiter-artifacts-java-${{ matrix.java }}
          path: |
            rate-limiter/build/libs/*.jar
            rate-limiter-spring-boot-autoconfigure/build/libs/*.jar
          retention-days: 7

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for better analysis

      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: gradle

      - name: 🔧 Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🔍 Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: 📊 SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew build jacocoTestReport sonar --info \
            -Dsonar.projectKey=your-project-key \
            -Dsonar.organization=your-organization \
            -Dsonar.host.url=https://sonarcloud.io
        continue-on-error: true

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: gradle

      - name: 🔧 Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🧪 Run integration tests
        run: ./gradlew :example:test --tests "*IntegrationTest" --no-daemon

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: gradle

      - name: 🔧 Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🔒 Dependency vulnerability scan
        run: ./gradlew dependencyCheckAnalyze --no-daemon
        continue-on-error: true

      - name: 📤 Upload dependency check results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: dependency-check-report
          path: build/reports/dependency-check-report.html
          retention-days: 7

  publish:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: [build-and-test, integration-test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: gradle

      - name: 🔧 Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 📦 Publish package
        run: ./gradlew publish --no-daemon
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
